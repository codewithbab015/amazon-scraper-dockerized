services:
  postgres:
    image: postgres:15
    container_name: postgres-cli-db
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    networks:
      - pg-network

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin-ui
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: ${USER_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - pg-network

  amazon-web-cli:
    image: mrbaloyin/amazon-scraper-cli:latest
    build:
      context: .
      dockerfile: Dockerfile
    container_name: amazon-scraper-container-cli
    restart: "no"
    depends_on:
      - postgres
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./data:/app/data
    # command: ["--run_group", "electronics", "--run_name", "camera-photo", "--run_mode", "extract"]
    networks:
      - pg-network

volumes:
  postgres_data:

networks:
  pg-network:
